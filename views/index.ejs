<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Proyecto</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&family=Roboto:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/style.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"
    />
  </head>
  <body>
    <!-- Ruleta -->
    <section id="ruleta">
      <h2>La Ruleta</h2>
      <div id="ruletaContainer" class="row m-3"></div>
      <textarea
        id="nuevoElemento"
        placeholder="Añadir elementos a La Ruleta."
        autocomplete="off"
      ></textarea>
      <button id="agregarElemento">Añadir a La Ruleta</button>
      <button id="girarRuleta">Girar La Ruleta</button>
      <button id="borrarRuleta">Borrar La Ruleta</button>
      <p id="probabilidades"></p>
    </section>

    <!-- Sorteo de equipos -->
    <section id="sorteo">
      <h2>Sorteo de Equipos</h2>
      <textarea
        id="nombres"
        placeholder="Escribe los nombres, uno por línea."
        autocomplete="off"
      ></textarea>
      <button id="sortearEquipos">Sortear equipos</button>
      <button id="borrarEquipos">Borrar Equipos</button>
      <div id="equipos" class="row"></div>
    </section>

    <!-- Lógica de la ruleta y sorteo -->
    <script>
      let elementosRuleta = [];
      let equipoA = [];
      let equipoB = [];

      // Función para actualizar la ruleta y mostrar elementos con botón de eliminación
      function actualizarRuleta() {
        const container = document.getElementById("ruletaContainer");
        if (container) {
          container.innerHTML = "";
          elementosRuleta.forEach((elemento, index) => {
            container.innerHTML += `
              <div class="col-md-4">
                <p id"textX"">${index + 1}.- ${elemento} </p> 
                <button
                  id="x"
                  type="button"
                  class="btn btn-outline-danger"
                  onclick="eliminarElementoRuleta(${index})"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    stroke="currentColor"
                    stroke-width="1"
                    fill="currentColor"
                    class="bi bi-x-lg"
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"
                    ></path>
                  </svg>
                  </button
                >
              </div>
            </div>
            `;
          });
        }

        const probabilidad = (1 / elementosRuleta.length) * 100;
        document.getElementById(
          "probabilidades"
        ).innerText = `Probabilidad de cada elemento: ${probabilidad.toFixed(
          2
        )}%`;
      }

      // Función para eliminar un elemento de la ruleta
      function eliminarElementoRuleta(index) {
        elementosRuleta.splice(index, 1); // Elimina el elemento en el índice dado
        actualizarRuleta(); // Actualiza la lista
      }

      function eliminarRuleta() {
        // Vacía el array de elementos de la ruleta
        elementosRuleta.length = 0;

        // Llama a la función que actualiza la visualización de la ruleta
        actualizarRuleta();
      }

      document
        .getElementById("agregarElemento")
        .addEventListener("click", () => {
          const nuevoElemento = document.getElementById("nuevoElemento").value;
          let array = nuevoElemento.split("\n");
          array.forEach((elemento, index) => {
            elementosRuleta.push(array[index]);
            actualizarRuleta();
          });
        });

      document.getElementById("girarRuleta").addEventListener("click", () => {
        if (elementosRuleta.length > 0) {
          const ganador =
            elementosRuleta[Math.floor(Math.random() * elementosRuleta.length)];
          alert(`El elemento seleccionado es: ${ganador}`);
        }
      });

      document.getElementById("borrarRuleta").addEventListener("click", () => {
        if (elementosRuleta.length == 0) {
          alert(`No hay elementos a borrar.`);
        } else {
          eliminarRuleta();
        }
      });

      // Función para actualizar los equipos y mostrar elementos con botón de eliminación
      function actualizarEquipos() {
        const container = document.getElementById("equipos");
        if (container) {
          container.innerHTML = `
      <div class="col-md-6">
        <h3>Equipo A</h3>
        ${equipoA
          .map(
            (nombre, index) => `
              <div class="member-container">
                <button
                  id="x"
                  type="button"
                  class="btn btn-outline-danger"
                  onclick="eliminarMiembro('A', ${index})"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    stroke="currentColor"
                    stroke-width="1"
                    fill="currentColor"
                    class="bi bi-x-lg"
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"
                    ></path>
                  </svg>
                </button>
                <p>${index + 1}.- ${nombre}</p>
              </div>
            `
          )
          .join("")}
      </div>
      <div class="col-md-6">
        <h3>Equipo B</h3>
        ${equipoB
          .map(
            (nombre, index) => `
              <div class="member-container">
                <button
                  id="x"
                  type="button"
                  class="btn btn-outline-danger"
                  onclick="eliminarMiembro('B', ${index})"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    stroke="currentColor"
                    stroke-width="1"
                    fill="currentColor"
                    class="bi bi-x-lg"
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"
                    ></path>
                  </svg>
                </button>
                <p>${index + 1}.- ${nombre}</p>
              </div>
            `
          )
          .join("")}
      </div>
    `;
        }
      }

      // Función para eliminar un miembro de los equipos
      function eliminarMiembro(equipo, index) {
        if (equipo === "A") {
          equipoA.splice(index, 1); // Elimina el miembro de Equipo A
        } else if (equipo === "B") {
          equipoB.splice(index, 1); // Elimina el miembro de Equipo B
        }
        actualizarEquipos(); // Actualiza la lista de equipos
      }

      // Función para vaciar los equipos
      function eliminarEquipos() {
        if (equipoA.length == 0 || equipoB.length == 0) {
          alert(`No hay elementos a borrar.`);
        } else {
          equipoA.length = 0;
          equipoB.length = 0;
          actualizarEquipos();
        }
      }

      // Lógica para repartir los equipos al hacer click en sortear
      document
        .getElementById("sortearEquipos")
        .addEventListener("click", () => {
          const nombres = document
            .getElementById("nombres")
            .value.trim()
            .split("\n");
          equipoA.length = 0;
          equipoB.length = 0;

          // Barajar nombres aleatoriamente
          const nombresAleatorios = nombres.sort(() => Math.random() - 0.5);

          // Repartir en dos equipos
          nombresAleatorios.forEach((nombre, index) => {
            if (index % 2 === 0) {
              equipoA.push(nombre);
            } else {
              equipoB.push(nombre);
            }
          });

          actualizarEquipos();
        });

      // Lógica para vaciar los equipos
      document.getElementById("borrarEquipos").addEventListener("click", () => {
        if (equipoA.length === 0 && equipoB.length === 0) {
          alert("No hay equipos a borrar.");
        } else {
          eliminarEquipos();
        }
      });
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
